#主配置文件，配置了这个会优先读取里面的属性覆盖主配置文件的属性
spring.profiles.active=dev
#时间格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#时区设置
spring.jackson.time-zone=Asia/Chongqing
# 应用自定义配置
logging.config=classpath:logback-boot.xml


#===============================es===============================
elasticsearch.cluster-name: elasticsearch
elasticsearch.cluster-nodes: 10.99.39.211
elasticsearch.port: 9300



server.port=8080

####################################### 数据库访问配置  writer###############################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.99.39.211:3306/my_test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=mysql
spring.datasource.password=mysql
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true


# =============================数据库访问配置  read========================
spring.datasource.type_read=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name_read=com.mysql.cj.jdbc.Driver
spring.datasource.url_read=jdbc:mysql://10.99.39.211:3306/my_test_read?useUnicode=true&characterEncoding=utf-8
spring.datasource.username_read=mysql
spring.datasource.password_read=mysql
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize_read=5
spring.datasource.minIdle_read=5
spring.datasource.maxActive_read=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait_read=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis_read=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis_read=300000
spring.datasource.validationQuery_read=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle_read=true
spring.datasource.testOnBorrow_read=false
spring.datasource.testOnReturn_read=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters_read=stat,wall,log4j
spring.datasource.logSlowSql_read=true





# 发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.producer.groupName: test_group
rocketmq.producer.group.account: group_account
#mq的nameserver地址
rocketmq.producer.namesrvAddr: 10.99.39.211:9876
#如果需要同一个jvm中不同的producer往不同的mq集群发送消息，需要设置不同的instanceName
rocketmq.producer.instanceName: test_producer

rocketmq.producer.instance.account: instance_account

#topic名称
rocketmq.producer.topic: boot_test

rocketmq.producer.topic.account: topic_account
#根据实际情况设置消息的tag
rocketmq.producer.tag: boot_test
#消息最大长度 # 1024*128
rocketmq.producer.maxMessageSize: 131072 
#发送消息超时时间
rocketmq.producer.sendMsgTimeout: 10000


rocketmq.consumer.namesrvAddr: 10.99.39.211:9876
rocketmq.consumer.groupName: test_group
rocketmq.consumer.topic: boot_test
rocketmq.consumer.tag: boot_test
rocketmq.consumer.consumeThreadMin: 20
rocketmq.consumer.consumeThreadMax: 64


